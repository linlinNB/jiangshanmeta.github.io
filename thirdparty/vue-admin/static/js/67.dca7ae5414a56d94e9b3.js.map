{"version":3,"sources":["webpack:///./src/mixins/common/_id_mixin.js","webpack:///./src/components/common/operators/edit.vue?b853","webpack:///./src/components/common/operators/edit.vue?749c","webpack:///src/components/common/operators/edit.vue","webpack:///./src/components/common/operators/edit.vue"],"names":["__webpack_exports__","props","idfield","type","String","default","computed","id","this","data","operators_editvue_type_script_lang_js","name","mixins","_id_mixin","components","editor","__webpack_require__","e","then","bind","isShowEditbox","fields","record","canInitDialog","Object","required","field_list","getEditInfo","Function","doEditRequest","triggerConfig","dialogConfig","editBtnConfig","cancelBtnConfig","autoValidate","Boolean","transformData","reserveFields","Array","methods","getEditFields","_this","promise_default","a","resolve","reject","_ref","catch","utility","doEdit","_this2","$refs","editbox","validate","forEach","field","$emit","err","$message","component","componentNormalizer","_vm","_h","$createElement","_c","_self","_b","on","click","_v","_s","text","attrs","visible","update:visible","$event","ref","mode","slot","_e"],"mappings":"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","file":"static/js/67.dca7ae5414a56d94e9b3.js","sourcesContent":["export default{\n    props:{\n        idfield:{\n            type:String,\n            default:\"id\"\n        }\n    },\n    computed:{\n        id(){\n            return this.data[this.idfield];\n        }\n    }\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-button',_vm._b({on:{\"click\":_vm.getEditFields}},'el-button',_vm.triggerConfig,false),[_vm._v(\"\\n        \"+_vm._s(_vm.triggerConfig.text)+\"\\n    \")]),_vm._v(\" \"),(_vm.canInitDialog)?_c('el-dialog',_vm._b({attrs:{\"visible\":_vm.isShowEditbox},on:{\"update:visible\":function($event){_vm.isShowEditbox=$event}}},'el-dialog',_vm.dialogConfig,false),[_c('editor',{ref:\"editbox\",attrs:{\"fields\":_vm.fields,\"record\":_vm.record,\"field_list\":_vm.field_list,\"autoValidate\":_vm.autoValidate,\"mode\":\"edit\"}}),_vm._v(\" \"),_c('section',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',_vm._b({on:{\"click\":function($event){_vm.isShowEditbox=false}}},'el-button',_vm.cancelBtnConfig,false),[_vm._v(\"\\n                \"+_vm._s(_vm.cancelBtnConfig.text)+\"\\n            \")]),_vm._v(\" \"),_c('el-button',_vm._b({on:{\"click\":_vm.doEdit}},'el-button',_vm.editBtnConfig,false),[_vm._v(\"\\n                \"+_vm._s(_vm.editBtnConfig.text)+\"\\n            \")])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js\"","<template>\n    <div>\n        <el-button\n            @click=\"getEditFields\"\n            v-bind=\"triggerConfig\"\n        >\n            {{triggerConfig.text}}\n        </el-button>\n        <el-dialog\n            v-if=\"canInitDialog\"\n            :visible.sync=\"isShowEditbox\"\n            v-bind=\"dialogConfig\"\n        >\n            <editor\n                :fields=\"fields\"\n                :record=\"record\"\n                :field_list=\"field_list\"\n                :autoValidate=\"autoValidate\"\n                mode=\"edit\"\n                ref=\"editbox\"\n            ></editor>\n            <section slot=\"footer\">\n                <el-button \n                    @click=\"isShowEditbox=false\"\n                    v-bind=\"cancelBtnConfig\"\n                >\n                    {{cancelBtnConfig.text}}\n                </el-button>\n                <el-button\n                    @click=\"doEdit\"\n                    v-bind=\"editBtnConfig\"\n                >\n                    {{editBtnConfig.text}}\n                </el-button>\n            </section>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport _id_mixin from \"@/mixins/common/_id_mixin.js\"\nimport {logError} from \"@/widget/utility.js\"\n\nexport default {\n    name:\"edit\",\n    mixins:[\n        _id_mixin,\n    ],\n    components:{\n        editor:()=>import(\"@/components/common/editor/editor\"),\n    },\n    data(){\n        return {\n            isShowEditbox:false,\n            fields:[],\n            record:{},\n            canInitDialog:false,\n        }\n    },\n    props:{\n        data:{\n            type:Object,\n            required:true,\n        },\n        field_list:{\n            type:Object,\n            required:true,\n        },\n        getEditInfo:{\n            type:Function,\n            required:true,\n        },\n        doEditRequest:{\n            type:Function,\n            required:true,\n        },\n        triggerConfig:{\n            type:Object,\n            default(){\n                return {};\n            },\n        },\n        dialogConfig:{\n            type:Object,\n            default(){\n                return {}\n            },\n        },\n        editBtnConfig:{\n            type:Object,\n            default(){\n                return {};\n            },\n        },\n        cancelBtnConfig:{\n            type:Object,\n            default(){\n                return {};\n            },\n        },\n        autoValidate:{\n            type:Boolean,\n            default:false,\n        },\n        transformData:{\n            type:Function,\n            default:function(data){\n                return data;\n            }\n        },\n        reserveFields:{\n            type:Array,\n            default:function(){\n                return [];\n            },\n        },\n    },\n    methods:{\n        getEditFields(){\n            new Promise((resolve,reject)=>{\n                this.getEditInfo(resolve);\n            }).then(({fields,record})=>{\n                this.fields = fields;\n                this.record = record;\n                this.canInitDialog = true;\n                this.isShowEditbox = true;\n            }).catch(logError);\n        },\n        doEdit(){\n            this.$refs.editbox.validate().then((data)=>{\n                this.reserveFields.forEach((field)=>{\n                    data[field] = this.record[field];\n                });\n                \n                new Promise((resolve,reject)=>{\n                    this.doEditRequest(resolve,this.transformData(data))\n                }).then(()=>{\n                    this.isShowEditbox = false;\n                    this.$emit('update');\n                }).catch(logError);\n\n            }).catch((err)=>{\n                this.$message(err);\n            })\n\n        },\n    },\n}\n</script>\n","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=d468d51e\"\nimport script from \"./edit.vue?vue&type=script&lang=js\"\nexport * from \"./edit.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}